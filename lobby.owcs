settings
{
	main
	{
		Description: "======= IRON BANNER v1.1 ======= By @Cactus_Puppy                                                A port of Destiny 2's Iron Banner gamemode to Overwatch. Two teams fight for control over 3 zones. The more zones a team controls, the more points they earn per kill. If a team gets all 3 zones, they activate The Hunt. First to 100 points wins!"
	}

	lobby
	{
		Allow Players Who Are In Queue: Yes
		Max Spectators: 12
	}

	modes
	{
		Team Deathmatch
		{
			enabled maps
			{
				Lijiang Control Center
				Lijiang Control Center Lunar New Year
				Lijiang Garden
				Lijiang Garden Lunar New Year
				Lijiang Night Market
				Lijiang Night Market Lunar New Year
			}
		}

		General
		{
			Game Mode Start: Immediately
			Mercy Resurrect Counteracts Kills: Off
			Score To Win: 100
		}
	}
}

variables
{
	global:
		0: zoneLocations
		1: zoneSizes
		2: zoneControl
		3: numTeam1A
		4: numTeam1B
		5: numTeam1C
		6: numTeam2A
		7: numTeam2B
		8: numTeam2C
		9: huntActive
		10: huntTimer
		11: activateHunt
		12: huntDuration
		13: huntMarkers
		14: zoneAHudText
		15: zoneBHudText
		16: zoneCHudText
		20: zoneAProgress
		21: zoneBProgress
		22: zoneCProgress
		23: skullIcons
}

disabled rule("=====CUSTOMIZATION=====")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Abort;
	}
}

rule("activateHunt: Set to True to activate The Hunt when a team caps all 3 points. Default: True")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(activateHunt, True);
	}
}

rule("huntDuration: How long The Hunt lasts for in seconds. Default: 25")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(huntDuration, 25);
	}
}

rule("huntMarkers: Whether the hunted have markers above their head during The Hunt. Default: True")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(huntMarkers, True);
	}
}

disabled rule("=====SETUP=====")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Abort;
	}
}

disabled rule("DEBUG: Show CPU")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Server Load: {0}", Server Load, Null, Null), Left, 0, White,
			White, White, Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Server Avg: {0}", Server Load Average, Null, Null), Left, 1,
			White, White, White, Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Server Peak: {0}", Server Load Peak, Null, Null), Left, 2,
			White, White, White, Visible To and String, Default Visibility);
	}
}

disabled rule("DEBUG: Show Player Position")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Create HUD Text(Event Player, Custom String("{0}", Position Of(Event Player), Null, Null), Null, Null, Left, -1, Yellow, White,
			White, String, Visible Never);
	}
}

disabled rule("DEBUG: Shorten assemble heroes")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Assembling Heroes == True;
	}

	actions
	{
		Set Match Time(10);
	}
}

rule("Initialization")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable At Index(zoneControl, 0, Null);
		Create HUD Text(Filtered Array(Players Within Radius(First Of(Global Variable(zoneLocations)), First Of(Global Variable(
			zoneSizes)), All Teams, Off), And(Compare(Absolute Value(Global Variable(zoneAProgress)), >, 0), Not(Global Variable(
			huntActive)))), Custom String("Progress: {0}%", Round To Integer(Absolute Value(Global Variable(zoneAProgress)), Down), Null,
			Null), Null, Null, Top, 2, Lime Green, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneControl, 1, Null);
		Create HUD Text(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 1), Value In Array(
			Global Variable(zoneSizes), 1), All Teams, Off), And(Compare(Absolute Value(Global Variable(zoneBProgress)), >, 0), Not(
			Global Variable(huntActive)))), Custom String("Progress: {0}%", Round To Integer(Absolute Value(Global Variable(
			zoneBProgress)), Down), Null, Null), Null, Null, Top, 2, Lime Green, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneControl, 2, Null);
		Create HUD Text(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 2), Value In Array(
			Global Variable(zoneSizes), 2), All Teams, Off), And(Compare(Absolute Value(Global Variable(zoneCProgress)), >, 0), Not(
			Global Variable(huntActive)))), Custom String("Progress: {0}%", Round To Integer(Absolute Value(Global Variable(
			zoneCProgress)), Down), Null, Null), Null, Null, Top, 2, Lime Green, White, White, Visible To and String, Visible Never);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("－－－－－－－－－－－​", Null, Null, Null), Right, 1.500, White, White,
			White, Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("－－－－－－－－－－－​", Null, Null, Null), Right, 2.500, White, White,
			White, Visible To and String, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Global Variable(huntActive)), Custom String("The Hunt: {0}",
			Round To Integer(Global Variable(huntTimer), Up), Null, Null), Null, Null, Top, 1, Yellow, White, White, Visible To and String,
			Default Visibility);
		Set Global Variable(huntActive, False);
		Disable Inspector Recording;
	}
}

rule("Setup Zones: Lijang Tower")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Array Contains(Append To Array(Append To Array(Append To Array(Append To Array(Append To Array(Append To Array(Empty Array, Map(
			Lijiang Control Center)), Map(Lijiang Control Center Lunar New Year)), Map(Lijiang Garden)), Map(
			Lijiang Garden Lunar New Year)), Map(Lijiang Night Market)), Map(Lijiang Night Market Lunar New Year)), Current Map) == True;
	}

	actions
	{
		Skip(Value In Array(Append To Array(Append To Array(Append To Array(Append To Array(Append To Array(Append To Array(
			Append To Array(Empty Array, 22), 1), 1), 8), 8), 15), 15), Add(1, Index Of Array Value(Append To Array(Append To Array(
			Append To Array(Append To Array(Append To Array(Append To Array(Empty Array, Map(Lijiang Control Center)), Map(
			Lijiang Control Center Lunar New Year)), Map(Lijiang Garden)), Map(Lijiang Garden Lunar New Year)), Map(Lijiang Night Market)),
			Map(Lijiang Night Market Lunar New Year)), Current Map))));
		disabled Abort;
		Set Global Variable At Index(zoneLocations, 0, Vector(48, 265, 329.150));
		Set Global Variable At Index(zoneSizes, 0, 6);
		Set Global Variable At Index(zoneLocations, 1, Vector(0, 267.330, 280));
		Set Global Variable At Index(zoneSizes, 1, 7);
		Set Global Variable At Index(zoneLocations, 2, Vector(-48, 265, 329.150));
		Set Global Variable At Index(zoneSizes, 2, 6);
		Abort;
		Set Global Variable At Index(zoneLocations, 0, Vector(43, 95, 150));
		Set Global Variable At Index(zoneSizes, 0, 5);
		Set Global Variable At Index(zoneLocations, 1, Vector(0, 94, 130));
		Set Global Variable At Index(zoneSizes, 1, 7);
		Set Global Variable At Index(zoneLocations, 2, Vector(-43, 95, 150));
		Set Global Variable At Index(zoneSizes, 2, 5);
		Abort;
		Set Global Variable At Index(zoneLocations, 0, Vector(62, 2, -29));
		Set Global Variable At Index(zoneSizes, 0, 5);
		Set Global Variable At Index(zoneLocations, 1, Vector(1, -1, -61));
		Set Global Variable At Index(zoneSizes, 1, 7);
		Set Global Variable At Index(zoneLocations, 2, Vector(-60, 2, -29));
		Set Global Variable At Index(zoneSizes, 2, 5);
		Abort;
	}
}

rule("Once Zones are defined, create visuals")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Count Of(Global Variable(zoneLocations)) == 3;
		Count Of(Global Variable(zoneSizes)) == 3;
	}

	actions
	{
		Create Effect(Filtered Array(All Players(All Teams), Compare(First Of(Global Variable(zoneControl)), ==, Null)), Ring, White,
			First Of(Global Variable(zoneLocations)), First Of(Global Variable(zoneSizes)), Visible To);
		Create In-World Text(Filtered Array(All Players(All Teams), Compare(First Of(Global Variable(zoneControl)), ==, Null)),
			Custom String("A", Null, Null, Null), Add(First Of(Global Variable(zoneLocations)), Multiply(2, Up)), 3, Do Not Clip,
			Visible To and String, White, Default Visibility);
		Create Effect(Filtered Array(All Players(All Teams), Compare(First Of(Global Variable(zoneControl)), ==, Team 1)), Ring, Team 1,
			First Of(Global Variable(zoneLocations)), First Of(Global Variable(zoneSizes)), Visible To);
		Create In-World Text(Filtered Array(All Players(All Teams), Compare(First Of(Global Variable(zoneControl)), ==, Team 1)),
			Custom String("A", Null, Null, Null), Add(First Of(Global Variable(zoneLocations)), Multiply(2, Up)), 3, Do Not Clip,
			Visible To and String, Team 1, Default Visibility);
		Create Effect(Filtered Array(All Players(All Teams), Compare(First Of(Global Variable(zoneControl)), ==, Team 2)), Ring, Team 2,
			First Of(Global Variable(zoneLocations)), First Of(Global Variable(zoneSizes)), Visible To);
		Create In-World Text(Filtered Array(All Players(All Teams), Compare(First Of(Global Variable(zoneControl)), ==, Team 2)),
			Custom String("A", Null, Null, Null), Add(First Of(Global Variable(zoneLocations)), Multiply(2, Up)), 3, Do Not Clip,
			Visible To and String, Team 2, Default Visibility);
		Create Effect(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 1), ==, Null)), Ring,
			White, Value In Array(Global Variable(zoneLocations), 1), Value In Array(Global Variable(zoneSizes), 1), Visible To);
		Create In-World Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 1), ==, Null)),
			Custom String("B", Null, Null, Null), Add(Value In Array(Global Variable(zoneLocations), 1), Multiply(2, Up)), 3, Do Not Clip,
			Visible To and String, White, Default Visibility);
		Create Effect(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 1), ==, Team 1)), Ring,
			Team 1, Value In Array(Global Variable(zoneLocations), 1), Value In Array(Global Variable(zoneSizes), 1), Visible To);
		Create In-World Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 1), ==, Team 1)),
			Custom String("B", Null, Null, Null), Add(Value In Array(Global Variable(zoneLocations), 1), Multiply(2, Up)), 3, Do Not Clip,
			Visible To and String, Team 1, Default Visibility);
		Create Effect(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 1), ==, Team 2)), Ring,
			Team 2, Value In Array(Global Variable(zoneLocations), 1), Value In Array(Global Variable(zoneSizes), 1), Visible To);
		Create In-World Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 1), ==, Team 2)),
			Custom String("B", Null, Null, Null), Add(Value In Array(Global Variable(zoneLocations), 1), Multiply(2, Up)), 3, Do Not Clip,
			Visible To and String, Team 2, Default Visibility);
		Create Effect(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 2), ==, Null)), Ring,
			White, Value In Array(Global Variable(zoneLocations), 2), Value In Array(Global Variable(zoneSizes), 2), Visible To);
		Create In-World Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 2), ==, Null)),
			Custom String("C", Null, Null, Null), Add(Value In Array(Global Variable(zoneLocations), 2), Multiply(2, Up)), 3, Do Not Clip,
			Visible To and String, White, Default Visibility);
		Create Effect(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 2), ==, Team 1)), Ring,
			Team 1, Value In Array(Global Variable(zoneLocations), 2), Value In Array(Global Variable(zoneSizes), 2), Visible To);
		Create In-World Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 2), ==, Team 1)),
			Custom String("C", Null, Null, Null), Add(Value In Array(Global Variable(zoneLocations), 2), Multiply(2, Up)), 3, Do Not Clip,
			Visible To and String, Team 1, Default Visibility);
		Create Effect(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 2), ==, Team 2)), Ring,
			Team 2, Value In Array(Global Variable(zoneLocations), 2), Value In Array(Global Variable(zoneSizes), 2), Visible To);
		Create In-World Text(Filtered Array(All Players(All Teams), Compare(Value In Array(Global Variable(zoneControl), 2), ==, Team 2)),
			Custom String("C", Null, Null, Null), Add(Value In Array(Global Variable(zoneLocations), 2), Multiply(2, Up)), 3, Do Not Clip,
			Visible To and String, Team 2, Default Visibility);
	}
}

disabled rule("=====GAMEPLAY=====")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Abort;
	}
}

rule("Disable Self Respawn for 5 seconds")
{
	event
	{
		Player Died;
		All;
		All;
	}

	actions
	{
		Disallow Button(Victim, Jump);
		Wait(5, Ignore Condition);
		Allow Button(Victim, Jump);
	}
}

rule("Reset on Game Start (Waiting for Players)")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Stop Chasing Global Variable(zoneAProgress);
		Stop Chasing Global Variable(zoneBProgress);
		Stop Chasing Global Variable(zoneCProgress);
		Set Global Variable At Index(zoneControl, 0, Null);
		Set Global Variable(zoneAProgress, 0);
		Set Global Variable At Index(zoneControl, 1, Null);
		Set Global Variable(zoneBProgress, 0);
		Set Global Variable At Index(zoneControl, 2, Null);
		Set Global Variable(zoneCProgress, 0);
		Set Team Score(Team 1, 0);
		Set Team Score(Team 2, 0);
		Wait(1, Ignore Condition);
		Set Objective Description(All Players(All Teams), Custom String("Fight and Capture Zones", Null, Null, Null),
			Visible To and String);
	}
}

rule("Upon earning a kill, award additional points for zones controlled")
{
	event
	{
		Player Dealt Final Blow;
		All;
		All;
	}

	conditions
	{
		Count Of(Filtered Array(Global Variable(zoneControl), Compare(Current Array Element, ==, Team Of(Attacker)))) >= 2;
	}

	actions
	{
		Modify Team Score(Team Of(Attacker), Subtract(Count Of(Filtered Array(Global Variable(zoneControl), Compare(Current Array Element,
			==, Team Of(Attacker)))), 1));
	}
}

rule("# Keep track of point flags")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Abort;
	}
}

rule("Point A: Set numTeam1A")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Count Of(Filtered Array(Players Within Radius(First Of(Global Variable(zoneLocations)), First Of(Global Variable(zoneSizes)),
			Team 1, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(Current Array Element), ==, Hero(Sombra)),
			Is Using Ability 1(Current Array Element)))))) != Global Variable(numTeam1A);
	}

	actions
	{
		Set Global Variable(numTeam1A, Count Of(Filtered Array(Players Within Radius(First Of(Global Variable(zoneLocations)), First Of(
			Global Variable(zoneSizes)), Team 1, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(Current Array Element),
			==, Hero(Sombra)), Is Using Ability 1(Current Array Element)))))));
	}
}

rule("Point A: Set numTeam2A")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Count Of(Filtered Array(Players Within Radius(First Of(Global Variable(zoneLocations)), First Of(Global Variable(zoneSizes)),
			Team 2, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(Current Array Element), ==, Hero(Sombra)),
			Is Using Ability 1(Current Array Element)))))) != Global Variable(numTeam2A);
	}

	actions
	{
		Set Global Variable(numTeam2A, Count Of(Filtered Array(Players Within Radius(First Of(Global Variable(zoneLocations)), First Of(
			Global Variable(zoneSizes)), Team 2, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(Current Array Element),
			==, Hero(Sombra)), Is Using Ability 1(Current Array Element)))))));
	}
}

rule("Point B: Set numTeam1B")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Count Of(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 1), Value In Array(Global Variable(
			zoneSizes), 1), Team 1, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(Current Array Element), ==, Hero(
			Sombra)), Is Using Ability 1(Current Array Element)))))) != Global Variable(numTeam1B);
	}

	actions
	{
		Set Global Variable(numTeam1B, Count Of(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 1),
			Value In Array(Global Variable(zoneSizes), 1), Team 1, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(
			Current Array Element), ==, Hero(Sombra)), Is Using Ability 1(Current Array Element)))))));
	}
}

rule("Point B: Set numTeam2B")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Count Of(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 1), Value In Array(Global Variable(
			zoneSizes), 1), Team 2, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(Current Array Element), ==, Hero(
			Sombra)), Is Using Ability 1(Current Array Element)))))) != Global Variable(numTeam2B);
	}

	actions
	{
		Set Global Variable(numTeam2B, Count Of(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 1),
			Value In Array(Global Variable(zoneSizes), 1), Team 2, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(
			Current Array Element), ==, Hero(Sombra)), Is Using Ability 1(Current Array Element)))))));
	}
}

rule("Point C: Set numTeam1C")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Count Of(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 2), Value In Array(Global Variable(
			zoneSizes), 2), Team 1, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(Current Array Element), ==, Hero(
			Sombra)), Is Using Ability 1(Current Array Element)))))) != Global Variable(numTeam1C);
	}

	actions
	{
		Set Global Variable(numTeam1C, Count Of(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 2),
			Value In Array(Global Variable(zoneSizes), 2), Team 1, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(
			Current Array Element), ==, Hero(Sombra)), Is Using Ability 1(Current Array Element)))))));
	}
}

rule("Point C: Set numTeam2C")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Count Of(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 2), Value In Array(Global Variable(
			zoneSizes), 2), Team 2, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(Current Array Element), ==, Hero(
			Sombra)), Is Using Ability 1(Current Array Element)))))) != Global Variable(numTeam2C);
	}

	actions
	{
		Set Global Variable(numTeam2C, Count Of(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 2),
			Value In Array(Global Variable(zoneSizes), 2), Team 2, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(
			Current Array Element), ==, Hero(Sombra)), Is Using Ability 1(Current Array Element)))))));
	}
}

rule("# Point A")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Abort;
	}
}

rule("Point A: Fast Reset")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Or(And(And(Compare(First Of(Global Variable(zoneControl)), ==, Team 1), Compare(Global Variable(numTeam1A), >, 0)), Compare(
			Global Variable(numTeam2A), ==, 0)), And(And(Compare(First Of(Global Variable(zoneControl)), ==, Team 2), Compare(
			Global Variable(numTeam2A), >, 0)), Compare(Global Variable(numTeam1A), ==, 0))) == True;
	}

	actions
	{
		Wait(1, Abort When False);
		Set Global Variable(zoneAProgress, 0);
	}
}

rule("Point A: Gradual Reset")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntTimer) == 0;
		Absolute Value(Global Variable(zoneAProgress)) > 0;
		Global Variable(numTeam1A) == 0;
		Global Variable(numTeam2A) == 0;
	}

	actions
	{
		Wait(3, Abort When False);
		Chase Global Variable At Rate(zoneAProgress, 0, 25, None);
	}
}

rule("Point A: Contesting")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntTimer) == 0;
		Global Variable(numTeam1A) > 0;
		Global Variable(numTeam2A) > 0;
	}

	actions
	{
		Stop Chasing Global Variable(zoneAProgress);
		Small Message(Filtered Array(Players Within Radius(First Of(Global Variable(zoneLocations)), First Of(Global Variable(zoneSizes)),
			All Teams, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(Current Array Element), ==, Hero(Sombra)),
			Is Using Ability 1(Current Array Element))))), Custom String("Contesting!", Null, Null, Null));
	}
}

rule("Point A: Capturing")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Or(And(And(Compare(First Of(Global Variable(zoneControl)), !=, Team 1), Compare(Global Variable(numTeam1A), >, 0)), Compare(
			Global Variable(numTeam2A), ==, 0)), And(And(Compare(First Of(Global Variable(zoneControl)), !=, Team 2), Compare(
			Global Variable(numTeam2A), >, 0)), Compare(Global Variable(numTeam1A), ==, 0))) == True;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(numTeam1A), >, 0)), 4);
		Skip If(Not(Compare(Global Variable(zoneAProgress), <, 0)), 1);
		Set Global Variable(zoneAProgress, 0);
		Chase Global Variable At Rate(zoneAProgress, 100, Multiply(5, Global Variable(numTeam1A)), Destination and Rate);
		Skip(3);
		Skip If(Not(Compare(Global Variable(zoneAProgress), >, 0)), 1);
		Set Global Variable(zoneAProgress, 0);
		Chase Global Variable At Rate(zoneAProgress, -100, Multiply(5, Global Variable(numTeam2A)), Destination and Rate);
	}
}

rule("Point A: Listen for Capture")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Absolute Value(Global Variable(zoneAProgress)) == 100;
	}

	actions
	{
		Stop Chasing Global Variable(zoneAProgress);
		Skip If(Not(Compare(Global Variable(zoneAProgress), ==, 100)), 7);
		Set Global Variable(zoneAProgress, 0);
		Set Global Variable At Index(zoneControl, 0, Team 1);
		Modify Team Score(Team 1, 1);
		Small Message(All Players(Team 1), Custom String("Zone A Captured", Null, Null, Null));
		Small Message(All Players(Team 2), Custom String("Zone A Lost", Null, Null, Null));
		Play Effect(All Players(All Teams), Ring Explosion, Team 1, First Of(Global Variable(zoneLocations)), Multiply(First Of(
			Global Variable(zoneSizes)), 2));
		Skip(6);
		Set Global Variable(zoneAProgress, 0);
		Set Global Variable At Index(zoneControl, 0, Team 2);
		Modify Team Score(Team 2, 1);
		Small Message(All Players(Team 1), Custom String("Zone A Lost", Null, Null, Null));
		Small Message(All Players(Team 2), Custom String("Zone A Captured", Null, Null, Null));
		Play Effect(All Players(All Teams), Ring Explosion, Team 2, First Of(Global Variable(zoneLocations)), Multiply(First Of(
			Global Variable(zoneSizes)), 2));
	}
}

rule("Zone A HUD: null 0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		First Of(Global Variable(zoneControl)) == Null;
		Global Variable(zoneAProgress) == 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneAHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneAHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 2));
		Create HUD Text(All Players(All Teams), Custom String("Zone A", Null, Null, Null), Custom String("Neutral", Null, Null, Null),
			Custom String("Unlocked", Null, Null, Null), Right, 1, White, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneAHudText, 0, Last Text ID);
		Set Global Variable At Index(zoneAHudText, 1, Last Text ID);
		Set Global Variable At Index(zoneAHudText, 2, Last Text ID);
	}
}

rule("Zone A HUD: null 1")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		First Of(Global Variable(zoneControl)) == Null;
		Global Variable(zoneAProgress) > 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneAHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneAHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 2));
		Create HUD Text(All Players(All Teams), Custom String("Zone A", Null, Null, Null), Custom String("Progress: {0}%",
			Round To Integer(Absolute Value(Global Variable(zoneAProgress)), Down), Null, Null), Custom String("Unlocked", Null, Null,
			Null), Right, 1, White, Team 1, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneAHudText, 0, Last Text ID);
		Set Global Variable At Index(zoneAHudText, 1, Last Text ID);
		Set Global Variable At Index(zoneAHudText, 2, Last Text ID);
	}
}

rule("Zone A HUD: null 2")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		First Of(Global Variable(zoneControl)) == Null;
		Global Variable(zoneAProgress) < 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneAHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneAHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 2));
		Create HUD Text(All Players(All Teams), Custom String("Zone A", Null, Null, Null), Custom String("Progress: {0}%",
			Round To Integer(Absolute Value(Global Variable(zoneAProgress)), Down), Null, Null), Custom String("Unlocked", Null, Null,
			Null), Right, 1, White, Team 2, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneAHudText, 0, Last Text ID);
		Set Global Variable At Index(zoneAHudText, 1, Last Text ID);
		Set Global Variable At Index(zoneAHudText, 2, Last Text ID);
	}
}

rule("Zone A HUD: Team.1 0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		First Of(Global Variable(zoneControl)) == Team 1;
		Global Variable(zoneAProgress) == 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneAHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneAHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 2));
		Create HUD Text(Null, Custom String("Zone A", Null, Null, Null), Custom String("", Null, Null, Null), Custom String("{0}", Team 1,
			Null, Null), Right, 1, Team 1, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneAHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone A", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Defend Zone", Null, Null, Null), Right, 1, Team 1, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneAHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone A", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Attack Zone", Null, Null, Null), Right, 1, Team 1, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneAHudText, 2, Last Text ID);
	}
}

rule("Zone A HUD: Team.1 1")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		First Of(Global Variable(zoneControl)) == Team 1;
		Global Variable(zoneAProgress) < 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneAHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneAHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 2));
		Create HUD Text(Null, Custom String("Zone A", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(Absolute Value(
			Global Variable(zoneAProgress)), Down), Null, Null), Custom String("{0}", Team 1, Null, Null), Right, 1, Team 1, Team 2, White,
			Visible To and String, Visible Always);
		Set Global Variable At Index(zoneAHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone A", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneAProgress)), Down), Null, Null), Custom String("Defend Zone", Null, Null, Null), Right, 1,
			Team 1, Team 2, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneAHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone A", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneAProgress)), Down), Null, Null), Custom String("Attack Zone", Null, Null, Null), Right, 1,
			Team 1, Team 2, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneAHudText, 2, Last Text ID);
	}
}

rule("Zone A HUD: Team.2 0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		First Of(Global Variable(zoneControl)) == Team 2;
		Global Variable(zoneAProgress) == 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneAHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneAHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 2));
		Create HUD Text(Null, Custom String("Zone A", Null, Null, Null), Custom String("", Null, Null, Null), Custom String("{0}", Team 2,
			Null, Null), Right, 1, Team 2, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneAHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone A", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Attack Zone", Null, Null, Null), Right, 1, Team 2, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneAHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone A", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Defend Zone", Null, Null, Null), Right, 1, Team 2, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneAHudText, 2, Last Text ID);
	}
}

rule("Zone A HUD: Team.2 1")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		First Of(Global Variable(zoneControl)) == Team 2;
		Global Variable(zoneAProgress) > 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneAHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneAHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 2));
		Create HUD Text(Null, Custom String("Zone A", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(Absolute Value(
			Global Variable(zoneAProgress)), Down), Null, Null), Custom String("{0}", Team 2, Null, Null), Right, 1, Team 2, Team 1, White,
			Visible To and String, Visible Always);
		Set Global Variable At Index(zoneAHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone A", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneAProgress)), Down), Null, Null), Custom String("Attack Zone", Null, Null, Null), Right, 1,
			Team 2, Team 1, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneAHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone A", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneAProgress)), Down), Null, Null), Custom String("Defend Zone", Null, Null, Null), Right, 1,
			Team 2, Team 1, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneAHudText, 2, Last Text ID);
	}
}

rule("# Point B")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Abort;
	}
}

rule("Point B: Fast Reset")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Or(And(And(Compare(Value In Array(Global Variable(zoneControl), 1), ==, Team 1), Compare(Global Variable(numTeam1B), >, 0)),
			Compare(Global Variable(numTeam2B), ==, 0)), And(And(Compare(Value In Array(Global Variable(zoneControl), 1), ==, Team 2),
			Compare(Global Variable(numTeam2B), >, 0)), Compare(Global Variable(numTeam1B), ==, 0))) == True;
	}

	actions
	{
		Wait(1, Abort When False);
		Set Global Variable(zoneBProgress, 0);
	}
}

rule("Point B: Gradual Reset")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntTimer) == 0;
		Absolute Value(Global Variable(zoneBProgress)) > 0;
		Global Variable(numTeam1B) == 0;
		Global Variable(numTeam2B) == 0;
	}

	actions
	{
		Wait(3, Abort When False);
		Chase Global Variable At Rate(zoneBProgress, 0, 25, None);
	}
}

rule("Point B: Contesting")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntTimer) == 0;
		Global Variable(numTeam1B) > 0;
		Global Variable(numTeam2B) > 0;
	}

	actions
	{
		Stop Chasing Global Variable(zoneBProgress);
		Small Message(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 1), Value In Array(
			Global Variable(zoneSizes), 1), All Teams, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(
			Current Array Element), ==, Hero(Sombra)), Is Using Ability 1(Current Array Element))))), Custom String("Contesting!", Null,
			Null, Null));
	}
}

rule("Point B: Capturing")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Or(And(And(Compare(Value In Array(Global Variable(zoneControl), 1), !=, Team 1), Compare(Global Variable(numTeam1B), >, 0)),
			Compare(Global Variable(numTeam2B), ==, 0)), And(And(Compare(Value In Array(Global Variable(zoneControl), 1), !=, Team 2),
			Compare(Global Variable(numTeam2B), >, 0)), Compare(Global Variable(numTeam1B), ==, 0))) == True;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(numTeam1B), >, 0)), 4);
		Skip If(Not(Compare(Global Variable(zoneBProgress), <, 0)), 1);
		Set Global Variable(zoneBProgress, 0);
		Chase Global Variable At Rate(zoneBProgress, 100, Multiply(5, Global Variable(numTeam1B)), Destination and Rate);
		Skip(3);
		Skip If(Not(Compare(Global Variable(zoneBProgress), >, 0)), 1);
		Set Global Variable(zoneBProgress, 0);
		Chase Global Variable At Rate(zoneBProgress, -100, Multiply(5, Global Variable(numTeam2B)), Destination and Rate);
	}
}

rule("Point B: Listen for Capture")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Absolute Value(Global Variable(zoneBProgress)) == 100;
	}

	actions
	{
		Stop Chasing Global Variable(zoneBProgress);
		Skip If(Not(Compare(Global Variable(zoneBProgress), ==, 100)), 7);
		Set Global Variable(zoneBProgress, 0);
		Set Global Variable At Index(zoneControl, 1, Team 1);
		Modify Team Score(Team 1, 1);
		Small Message(All Players(Team 1), Custom String("Zone B Captured", Null, Null, Null));
		Small Message(All Players(Team 2), Custom String("Zone B Lost", Null, Null, Null));
		Play Effect(All Players(All Teams), Ring Explosion, Team 1, Value In Array(Global Variable(zoneLocations), 1), Multiply(
			Value In Array(Global Variable(zoneSizes), 1), 2));
		Skip(6);
		Set Global Variable(zoneBProgress, 0);
		Set Global Variable At Index(zoneControl, 1, Team 2);
		Modify Team Score(Team 2, 1);
		Small Message(All Players(Team 1), Custom String("Zone B Lost", Null, Null, Null));
		Small Message(All Players(Team 2), Custom String("Zone B Captured", Null, Null, Null));
		Play Effect(All Players(All Teams), Ring Explosion, Team 2, Value In Array(Global Variable(zoneLocations), 1), Multiply(
			Value In Array(Global Variable(zoneSizes), 1), 2));
	}
}

rule("Zone B HUD: null 0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 1) == Null;
		Global Variable(zoneBProgress) == 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneBHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneBHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 2));
		Create HUD Text(All Players(All Teams), Custom String("Zone B", Null, Null, Null), Custom String("Neutral", Null, Null, Null),
			Custom String("Unlocked", Null, Null, Null), Right, 2, White, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneBHudText, 0, Last Text ID);
		Set Global Variable At Index(zoneBHudText, 1, Last Text ID);
		Set Global Variable At Index(zoneBHudText, 2, Last Text ID);
	}
}

rule("Zone B HUD: null 1")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 1) == Null;
		Global Variable(zoneBProgress) > 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneBHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneBHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 2));
		Create HUD Text(All Players(All Teams), Custom String("Zone B", Null, Null, Null), Custom String("Progress: {0}%",
			Round To Integer(Absolute Value(Global Variable(zoneBProgress)), Down), Null, Null), Custom String("Unlocked", Null, Null,
			Null), Right, 2, White, Team 1, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneBHudText, 0, Last Text ID);
		Set Global Variable At Index(zoneBHudText, 1, Last Text ID);
		Set Global Variable At Index(zoneBHudText, 2, Last Text ID);
	}
}

rule("Zone B HUD: null 2")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 1) == Null;
		Global Variable(zoneBProgress) < 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneBHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneBHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 2));
		Create HUD Text(All Players(All Teams), Custom String("Zone B", Null, Null, Null), Custom String("Progress: {0}%",
			Round To Integer(Absolute Value(Global Variable(zoneBProgress)), Down), Null, Null), Custom String("Unlocked", Null, Null,
			Null), Right, 2, White, Team 2, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneBHudText, 0, Last Text ID);
		Set Global Variable At Index(zoneBHudText, 1, Last Text ID);
		Set Global Variable At Index(zoneBHudText, 2, Last Text ID);
	}
}

rule("Zone B HUD: Team.1 0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 1) == Team 1;
		Global Variable(zoneBProgress) == 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneBHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneBHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 2));
		Create HUD Text(Null, Custom String("Zone B", Null, Null, Null), Custom String("", Null, Null, Null), Custom String("{0}", Team 1,
			Null, Null), Right, 2, Team 1, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneBHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone B", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Defend Zone", Null, Null, Null), Right, 2, Team 1, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneBHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone B", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Attack Zone", Null, Null, Null), Right, 2, Team 1, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneBHudText, 2, Last Text ID);
	}
}

rule("Zone B HUD: Team.1 1")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 1) == Team 1;
		Global Variable(zoneBProgress) < 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneBHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneBHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 2));
		Create HUD Text(Null, Custom String("Zone B", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(Absolute Value(
			Global Variable(zoneBProgress)), Down), Null, Null), Custom String("{0}", Team 1, Null, Null), Right, 2, Team 1, Team 2, White,
			Visible To and String, Visible Always);
		Set Global Variable At Index(zoneBHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone B", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneBProgress)), Down), Null, Null), Custom String("Defend Zone", Null, Null, Null), Right, 2,
			Team 1, Team 2, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneBHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone B", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneBProgress)), Down), Null, Null), Custom String("Attack Zone", Null, Null, Null), Right, 2,
			Team 1, Team 2, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneBHudText, 2, Last Text ID);
	}
}

rule("Zone B HUD: Team.2 0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 1) == Team 2;
		Global Variable(zoneBProgress) == 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneBHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneBHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 2));
		Create HUD Text(Null, Custom String("Zone B", Null, Null, Null), Custom String("", Null, Null, Null), Custom String("{0}", Team 2,
			Null, Null), Right, 2, Team 2, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneBHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone B", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Attack Zone", Null, Null, Null), Right, 2, Team 2, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneBHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone B", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Defend Zone", Null, Null, Null), Right, 2, Team 2, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneBHudText, 2, Last Text ID);
	}
}

rule("Zone B HUD: Team.2 1")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 1) == Team 2;
		Global Variable(zoneBProgress) > 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneBHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneBHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 2));
		Create HUD Text(Null, Custom String("Zone B", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(Absolute Value(
			Global Variable(zoneBProgress)), Down), Null, Null), Custom String("{0}", Team 2, Null, Null), Right, 2, Team 2, Team 1, White,
			Visible To and String, Visible Always);
		Set Global Variable At Index(zoneBHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone B", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneBProgress)), Down), Null, Null), Custom String("Attack Zone", Null, Null, Null), Right, 2,
			Team 2, Team 1, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneBHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone B", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneBProgress)), Down), Null, Null), Custom String("Defend Zone", Null, Null, Null), Right, 2,
			Team 2, Team 1, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneBHudText, 2, Last Text ID);
	}
}

rule("# Point C")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Abort;
	}
}

rule("Point C: Fast Reset")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Or(And(And(Compare(Value In Array(Global Variable(zoneControl), 2), ==, Team 1), Compare(Global Variable(numTeam1C), >, 0)),
			Compare(Global Variable(numTeam2C), ==, 0)), And(And(Compare(Value In Array(Global Variable(zoneControl), 2), ==, Team 2),
			Compare(Global Variable(numTeam2C), >, 0)), Compare(Global Variable(numTeam1C), ==, 0))) == True;
	}

	actions
	{
		Wait(1, Abort When False);
		Set Global Variable(zoneCProgress, 0);
	}
}

rule("Point C: Gradual Reset")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntTimer) == 0;
		Absolute Value(Global Variable(zoneCProgress)) > 0;
		Global Variable(numTeam1C) == 0;
		Global Variable(numTeam2C) == 0;
	}

	actions
	{
		Wait(3, Abort When False);
		Chase Global Variable At Rate(zoneCProgress, 0, 25, None);
	}
}

rule("Point C: Contesting")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntTimer) == 0;
		Global Variable(numTeam1C) > 0;
		Global Variable(numTeam2C) > 0;
	}

	actions
	{
		Stop Chasing Global Variable(zoneCProgress);
		Small Message(Filtered Array(Players Within Radius(Value In Array(Global Variable(zoneLocations), 2), Value In Array(
			Global Variable(zoneSizes), 2), All Teams, Off), And(Is Alive(Current Array Element), Not(And(Compare(Hero Of(
			Current Array Element), ==, Hero(Sombra)), Is Using Ability 1(Current Array Element))))), Custom String("Contesting!", Null,
			Null, Null));
	}
}

rule("Point C: Capturing")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Or(And(And(Compare(Value In Array(Global Variable(zoneControl), 2), !=, Team 1), Compare(Global Variable(numTeam1C), >, 0)),
			Compare(Global Variable(numTeam2C), ==, 0)), And(And(Compare(Value In Array(Global Variable(zoneControl), 2), !=, Team 2),
			Compare(Global Variable(numTeam2C), >, 0)), Compare(Global Variable(numTeam1C), ==, 0))) == True;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(numTeam1C), >, 0)), 4);
		Skip If(Not(Compare(Global Variable(zoneCProgress), <, 0)), 1);
		Set Global Variable(zoneCProgress, 0);
		Chase Global Variable At Rate(zoneCProgress, 100, Multiply(5, Global Variable(numTeam1C)), Destination and Rate);
		Skip(3);
		Skip If(Not(Compare(Global Variable(zoneCProgress), >, 0)), 1);
		Set Global Variable(zoneCProgress, 0);
		Chase Global Variable At Rate(zoneCProgress, -100, Multiply(5, Global Variable(numTeam2C)), Destination and Rate);
	}
}

rule("Point C: Listen for Capture")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Absolute Value(Global Variable(zoneCProgress)) == 100;
	}

	actions
	{
		Stop Chasing Global Variable(zoneCProgress);
		Skip If(Not(Compare(Global Variable(zoneCProgress), ==, 100)), 7);
		Set Global Variable(zoneCProgress, 0);
		Set Global Variable At Index(zoneControl, 2, Team 1);
		Modify Team Score(Team 1, 1);
		Small Message(All Players(Team 1), Custom String("Zone C Captured", Null, Null, Null));
		Small Message(All Players(Team 2), Custom String("Zone C Lost", Null, Null, Null));
		Play Effect(All Players(All Teams), Ring Explosion, Team 1, Value In Array(Global Variable(zoneLocations), 2), Multiply(
			Value In Array(Global Variable(zoneSizes), 2), 2));
		Skip(6);
		Set Global Variable(zoneCProgress, 0);
		Set Global Variable At Index(zoneControl, 2, Team 2);
		Modify Team Score(Team 2, 1);
		Small Message(All Players(Team 1), Custom String("Zone C Lost", Null, Null, Null));
		Small Message(All Players(Team 2), Custom String("Zone C Captured", Null, Null, Null));
		Play Effect(All Players(All Teams), Ring Explosion, Team 2, Value In Array(Global Variable(zoneLocations), 2), Multiply(
			Value In Array(Global Variable(zoneSizes), 2), 2));
	}
}

rule("Zone C HUD: null 0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 2) == Null;
		Global Variable(zoneCProgress) == 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneCHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneCHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 2));
		Create HUD Text(All Players(All Teams), Custom String("Zone C", Null, Null, Null), Custom String("Neutral", Null, Null, Null),
			Custom String("Unlocked", Null, Null, Null), Right, 3, White, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneCHudText, 0, Last Text ID);
		Set Global Variable At Index(zoneCHudText, 1, Last Text ID);
		Set Global Variable At Index(zoneCHudText, 2, Last Text ID);
	}
}

rule("Zone C HUD: null 1")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 2) == Null;
		Global Variable(zoneCProgress) > 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneCHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneCHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 2));
		Create HUD Text(All Players(All Teams), Custom String("Zone C", Null, Null, Null), Custom String("Progress: {0}%",
			Round To Integer(Absolute Value(Global Variable(zoneCProgress)), Down), Null, Null), Custom String("Unlocked", Null, Null,
			Null), Right, 3, White, Team 1, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneCHudText, 0, Last Text ID);
		Set Global Variable At Index(zoneCHudText, 1, Last Text ID);
		Set Global Variable At Index(zoneCHudText, 2, Last Text ID);
	}
}

rule("Zone C HUD: null 2")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 2) == Null;
		Global Variable(zoneCProgress) < 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneCHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneCHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 2));
		Create HUD Text(All Players(All Teams), Custom String("Zone C", Null, Null, Null), Custom String("Progress: {0}%",
			Round To Integer(Absolute Value(Global Variable(zoneCProgress)), Down), Null, Null), Custom String("Unlocked", Null, Null,
			Null), Right, 3, White, Team 2, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneCHudText, 0, Last Text ID);
		Set Global Variable At Index(zoneCHudText, 1, Last Text ID);
		Set Global Variable At Index(zoneCHudText, 2, Last Text ID);
	}
}

rule("Zone C HUD: Team.1 0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 2) == Team 1;
		Global Variable(zoneCProgress) == 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneCHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneCHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 2));
		Create HUD Text(Null, Custom String("Zone C", Null, Null, Null), Custom String("", Null, Null, Null), Custom String("{0}", Team 1,
			Null, Null), Right, 3, Team 1, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneCHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone C", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Defend Zone", Null, Null, Null), Right, 3, Team 1, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneCHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone C", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Attack Zone", Null, Null, Null), Right, 3, Team 1, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneCHudText, 2, Last Text ID);
	}
}

rule("Zone C HUD: Team.1 1")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 2) == Team 1;
		Global Variable(zoneCProgress) < 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneCHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneCHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 2));
		Create HUD Text(Null, Custom String("Zone C", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(Absolute Value(
			Global Variable(zoneCProgress)), Down), Null, Null), Custom String("{0}", Team 1, Null, Null), Right, 3, Team 1, Team 2, White,
			Visible To and String, Visible Always);
		Set Global Variable At Index(zoneCHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone C", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneCProgress)), Down), Null, Null), Custom String("Defend Zone", Null, Null, Null), Right, 3,
			Team 1, Team 2, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneCHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone C", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneCProgress)), Down), Null, Null), Custom String("Attack Zone", Null, Null, Null), Right, 3,
			Team 1, Team 2, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneCHudText, 2, Last Text ID);
	}
}

rule("Zone C HUD: Team.2 0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 2) == Team 2;
		Global Variable(zoneCProgress) == 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneCHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneCHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 2));
		Create HUD Text(Null, Custom String("Zone C", Null, Null, Null), Custom String("", Null, Null, Null), Custom String("{0}", Team 2,
			Null, Null), Right, 3, Team 2, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneCHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone C", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Attack Zone", Null, Null, Null), Right, 3, Team 2, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneCHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone C", Null, Null, Null), Custom String("", Null, Null, Null), Custom String(
			"Defend Zone", Null, Null, Null), Right, 3, Team 2, White, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneCHudText, 2, Last Text ID);
	}
}

rule("Zone C HUD: Team.2 1")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == False;
		Value In Array(Global Variable(zoneControl), 2) == Team 2;
		Global Variable(zoneCProgress) > 0;
	}

	actions
	{
		Skip If(Not(Compare(Global Variable(zoneCHudText), !=, Empty Array)), 3);
		Destroy HUD Text(First Of(Global Variable(zoneCHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 2));
		Create HUD Text(Null, Custom String("Zone C", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(Absolute Value(
			Global Variable(zoneCProgress)), Down), Null, Null), Custom String("{0}", Team 2, Null, Null), Right, 3, Team 2, Team 1, White,
			Visible To and String, Visible Always);
		Set Global Variable At Index(zoneCHudText, 0, Last Text ID);
		Create HUD Text(All Players(Team 1), Custom String("Zone C", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneCProgress)), Down), Null, Null), Custom String("Attack Zone", Null, Null, Null), Right, 3,
			Team 2, Team 1, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneCHudText, 1, Last Text ID);
		Create HUD Text(All Players(Team 2), Custom String("Zone C", Null, Null, Null), Custom String("Progress: {0}%", Round To Integer(
			Absolute Value(Global Variable(zoneCProgress)), Down), Null, Null), Custom String("Defend Zone", Null, Null, Null), Right, 3,
			Team 2, Team 1, White, Visible To and String, Visible Never);
		Set Global Variable At Index(zoneCHudText, 2, Last Text ID);
	}
}

disabled rule("=====THE HUNT=====")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Abort;
	}
}

rule("If a Team controls all 3 points, activate the Hunt")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(activateHunt) == True;
		Or(Is True For All(Global Variable(zoneControl), Compare(Current Array Element, ==, Team 1)), Is True For All(Global Variable(
			zoneControl), Compare(Current Array Element, ==, Team 2))) == True;
	}

	actions
	{
		Set Global Variable(huntActive, True);
		Set Global Variable(huntTimer, Global Variable(huntDuration));
		Stop Chasing Global Variable(zoneAProgress);
		Stop Chasing Global Variable(zoneBProgress);
		Stop Chasing Global Variable(zoneCProgress);
		Destroy HUD Text(First Of(Global Variable(zoneAHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneAHudText), 2));
		Skip If(Not(Is True For All(Global Variable(zoneControl), Compare(Current Array Element, ==, Team 1))), 2);
		Create HUD Text(All Players(All Teams), Custom String("Zone A", Null, Null, Null), Custom String("", Null, Null, Null),
			Custom String("Locked", Null, Null, Null), Right, 1, Team 1, White, White, Visible To and String, Visible Always);
		Skip(1);
		Create HUD Text(All Players(All Teams), Custom String("Zone A", Null, Null, Null), Custom String("", Null, Null, Null),
			Custom String("Locked", Null, Null, Null), Right, 1, Team 2, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneAHudText, 0, Last Text ID);
		Wait(0.033, Ignore Condition);
		Destroy HUD Text(First Of(Global Variable(zoneBHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneBHudText), 2));
		Skip If(Not(Is True For All(Global Variable(zoneControl), Compare(Current Array Element, ==, Team 1))), 2);
		Create HUD Text(All Players(All Teams), Custom String("Zone B", Null, Null, Null), Custom String("", Null, Null, Null),
			Custom String("Locked", Null, Null, Null), Right, 2, Team 1, White, White, Visible To and String, Visible Always);
		Skip(1);
		Create HUD Text(All Players(All Teams), Custom String("Zone B", Null, Null, Null), Custom String("", Null, Null, Null),
			Custom String("Locked", Null, Null, Null), Right, 2, Team 2, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneBHudText, 0, Last Text ID);
		Wait(0.033, Ignore Condition);
		Destroy HUD Text(First Of(Global Variable(zoneCHudText)));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 1));
		Destroy HUD Text(Value In Array(Global Variable(zoneCHudText), 2));
		Skip If(Not(Is True For All(Global Variable(zoneControl), Compare(Current Array Element, ==, Team 1))), 2);
		Create HUD Text(All Players(All Teams), Custom String("Zone C", Null, Null, Null), Custom String("", Null, Null, Null),
			Custom String("Locked", Null, Null, Null), Right, 3, Team 1, White, White, Visible To and String, Visible Always);
		Skip(1);
		Create HUD Text(All Players(All Teams), Custom String("Zone C", Null, Null, Null), Custom String("", Null, Null, Null),
			Custom String("Locked", Null, Null, Null), Right, 3, Team 2, White, White, Visible To and String, Visible Always);
		Set Global Variable At Index(zoneCHudText, 0, Last Text ID);
		Wait(0.033, Ignore Condition);
		Set Slow Motion(10);
		Set Aim Speed(All Players(All Teams), 50);
		Big Message(All Players(All Teams), Custom String("{0} is on The Hunt", First Of(Global Variable(zoneControl)), Null, Null));
		Set Objective Description(All Players(All Teams), Custom String("The Hunt is On", Null, Null, Null), Visible To and String);
		Big Message(All Players(First Of(Global Variable(zoneControl))), Custom String("Hunt Them Down", Null, Null, Null));
		Set Objective Description(All Players(Opposite Team Of(First Of(Global Variable(zoneControl)))), Custom String("Survive The Hunt",
			Null, Null, Null), Visible To and String);
		Big Message(All Players(Opposite Team Of(First Of(Global Variable(zoneControl)))), Custom String("Survive The Hunt", Null, Null,
			Null));
		Skip If(Not(Global Variable(huntMarkers)), 26);
		Skip If(Not(Compare(First Of(Global Variable(zoneControl)), ==, Team 1)), 13);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(0, Team 2)), Is Alive(Players In Slot(0,
			Team 2)))), Players In Slot(0, Team 2), Skull, Visible To and Position, Team 2, False);
		Set Global Variable At Index(skullIcons, 0, Last Created Entity);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(1, Team 2)), Is Alive(Players In Slot(1,
			Team 2)))), Players In Slot(1, Team 2), Skull, Visible To and Position, Team 2, False);
		Set Global Variable At Index(skullIcons, 1, Last Created Entity);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(2, Team 2)), Is Alive(Players In Slot(2,
			Team 2)))), Players In Slot(2, Team 2), Skull, Visible To and Position, Team 2, False);
		Set Global Variable At Index(skullIcons, 2, Last Created Entity);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(3, Team 2)), Is Alive(Players In Slot(3,
			Team 2)))), Players In Slot(3, Team 2), Skull, Visible To and Position, Team 2, False);
		Set Global Variable At Index(skullIcons, 3, Last Created Entity);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(4, Team 2)), Is Alive(Players In Slot(4,
			Team 2)))), Players In Slot(4, Team 2), Skull, Visible To and Position, Team 2, False);
		Set Global Variable At Index(skullIcons, 4, Last Created Entity);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(5, Team 2)), Is Alive(Players In Slot(5,
			Team 2)))), Players In Slot(5, Team 2), Skull, Visible To and Position, Team 2, False);
		Set Global Variable At Index(skullIcons, 5, Last Created Entity);
		Skip(12);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(0, Team 1)), Is Alive(Players In Slot(0,
			Team 1)))), Players In Slot(0, Team 1), Skull, Visible To and Position, Team 1, False);
		Set Global Variable At Index(skullIcons, 0, Last Created Entity);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(1, Team 1)), Is Alive(Players In Slot(1,
			Team 1)))), Players In Slot(1, Team 1), Skull, Visible To and Position, Team 1, False);
		Set Global Variable At Index(skullIcons, 1, Last Created Entity);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(2, Team 1)), Is Alive(Players In Slot(2,
			Team 1)))), Players In Slot(2, Team 1), Skull, Visible To and Position, Team 1, False);
		Set Global Variable At Index(skullIcons, 2, Last Created Entity);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(3, Team 1)), Is Alive(Players In Slot(3,
			Team 1)))), Players In Slot(3, Team 1), Skull, Visible To and Position, Team 1, False);
		Set Global Variable At Index(skullIcons, 3, Last Created Entity);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(4, Team 1)), Is Alive(Players In Slot(4,
			Team 1)))), Players In Slot(4, Team 1), Skull, Visible To and Position, Team 1, False);
		Set Global Variable At Index(skullIcons, 4, Last Created Entity);
		Create Icon(Filtered Array(All Players(All Teams), And(Entity Exists(Players In Slot(5, Team 1)), Is Alive(Players In Slot(5,
			Team 1)))), Players In Slot(5, Team 1), Skull, Visible To and Position, Team 1, False);
		Set Global Variable At Index(skullIcons, 5, Last Created Entity);
		Play Effect(All Players(All Teams), Ring Explosion Sound, White, Value In Array(Global Variable(zoneLocations), 1), 200);
		Wait(0.500, Ignore Condition);
		Set Slow Motion(100);
		Set Aim Speed(All Players(All Teams), 100);
		Chase Global Variable At Rate(huntTimer, 0, 1, None);
	}
}

rule("At end of Hunt, reset points")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global Variable(huntActive) == True;
		Global Variable(huntTimer) == 0;
	}

	actions
	{
		Stop Chasing Global Variable(huntTimer);
		Skip If(Not(Global Variable(huntMarkers)), 6);
		Destroy Icon(First Of(Global Variable(skullIcons)));
		Destroy Icon(Value In Array(Global Variable(skullIcons), 1));
		Destroy Icon(Value In Array(Global Variable(skullIcons), 2));
		Destroy Icon(Value In Array(Global Variable(skullIcons), 3));
		Destroy Icon(Value In Array(Global Variable(skullIcons), 4));
		Destroy Icon(Value In Array(Global Variable(skullIcons), 5));
		Set Objective Description(All Players(All Teams), Custom String("Fight and Capture Zones", Null, Null, Null),
			Visible To and String);
		Play Effect(All Players(All Teams), Ring Explosion Sound, White, Value In Array(Global Variable(zoneLocations), 1), 200);
		Big Message(All Players(All Teams), Custom String("The Hunt has Ended", Null, Null, Null));
		Destroy HUD Text(First Of(Global Variable(zoneAHudText)));
		Set Global Variable At Index(zoneControl, 0, Null);
		Set Global Variable(zoneAProgress, 0);
		Destroy HUD Text(First Of(Global Variable(zoneBHudText)));
		Set Global Variable At Index(zoneControl, 1, Null);
		Set Global Variable(zoneBProgress, 0);
		Destroy HUD Text(First Of(Global Variable(zoneCHudText)));
		Set Global Variable At Index(zoneControl, 2, Null);
		Set Global Variable(zoneCProgress, 0);
		Set Global Variable(huntActive, False);
	}
}